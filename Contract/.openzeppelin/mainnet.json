{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7779F54E74FD020f25679D9aF568e5cA9EEd7901",
    "txHash": "0x326c3cc2133fc263e70ca40a3c1bdecdc0c61b24ab945b37d9c2e25de0127d1d",
    "deployTransaction": {
      "hash": "0x326c3cc2133fc263e70ca40a3c1bdecdc0c61b24ab945b37d9c2e25de0127d1d",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xe7AF77629e7ECEd41C7B7490Ca9C4788F7c385E5",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x1d7e7c6c38"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682f00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x1d7e7c6c38"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x386698b9ea8b9ffd6668b77167ae5215290b7dc4bf0017474c32f5a7bf2dbc3a",
      "s": "0x312baa48ff73ba7da2adcc5b8635af76b908d2a4cd2d2b614fa4ba9931fa07b2",
      "v": 0,
      "creates": "0x7779F54E74FD020f25679D9aF568e5cA9EEd7901",
      "chainId": 1
    }
  },
  "proxies": [
    {
      "address": "0xA351B769A01B445C04AA1b8E6275e03ec05C1E75",
      "txHash": "0x0283fb66815512ad848cbe7eaea63d9ba9366b92a0fe5ddfc8df6bffbe08af4a",
      "kind": "transparent"
    },
    {
      "address": "0x367Dd3A23451B8Cc94F7EC1ecc5b3db3745D254e",
      "txHash": "0xf772cfe4cedb1e30f6fde4b3b72bacc9fef17afac78c9d6dca9727bbd7744f93",
      "kind": "transparent"
    },
    {
      "address": "0xBE55aBFcd0Bc8863A7472a735E7001509ff0b7B8",
      "txHash": "0xa4524b1da595a255c4b0703b0439b37660d983b03d8482e270bc1218c17bd37f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "49d0cd58a7e565451c4b8cbf6441eedbedaaf4b86b5eccdc1c70b6d4d3352f87": {
      "address": "0x5c6264eeAC2b2A8C5D5fb6bD4d44EDB055E45Cf2",
      "txHash": "0xa5d119cbcfe68bf60c35b3a81e52202b769e1d485be7ffcafdd119ed0f295f45",
      "layout": {
        "storage": [
          {
            "contract": "ERC721",
            "label": "implementation_",
            "type": "t_address",
            "src": "contracts\\ERC721.sol:31"
          },
          {
            "contract": "ERC721",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\ERC721.sol:32"
          },
          {
            "contract": "ERC721",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\ERC721.sol:38"
          },
          {
            "contract": "ERC721",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\ERC721.sol:39"
          },
          {
            "contract": "ERC721",
            "label": "balanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\ERC721.sol:41"
          },
          {
            "contract": "ERC721",
            "label": "ownerOf",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\ERC721.sol:42"
          },
          {
            "contract": "ERC721",
            "label": "getApproved",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\ERC721.sol:43"
          },
          {
            "contract": "ERC721",
            "label": "isApprovedForAll",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\ERC721.sol:44"
          },
          {
            "contract": "EthernalElves",
            "label": "elfmetaDataHandler",
            "type": "t_contract(IElfMetaDataHandler)4827",
            "src": "contracts\\EthernalElves.sol:23"
          },
          {
            "contract": "EthernalElves",
            "label": "campaigns",
            "type": "t_contract(ICampaigns)4853",
            "src": "contracts\\EthernalElves.sol:24"
          },
          {
            "contract": "EthernalElves",
            "label": "ren",
            "type": "t_contract(IERC20Lite)4817",
            "src": "contracts\\EthernalElves.sol:25"
          },
          {
            "contract": "EthernalElves",
            "label": "isGameActive",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:31"
          },
          {
            "contract": "EthernalElves",
            "label": "isMintOpen",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:32"
          },
          {
            "contract": "EthernalElves",
            "label": "isWlOpen",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:33"
          },
          {
            "contract": "EthernalElves",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:34"
          },
          {
            "contract": "EthernalElves",
            "label": "dev1Address",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:36"
          },
          {
            "contract": "EthernalElves",
            "label": "dev2Address",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:37"
          },
          {
            "contract": "EthernalElves",
            "label": "terminus",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:38"
          },
          {
            "contract": "EthernalElves",
            "label": "validator",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:39"
          },
          {
            "contract": "EthernalElves",
            "label": "INIT_SUPPLY",
            "type": "t_uint256",
            "src": "contracts\\EthernalElves.sol:41"
          },
          {
            "contract": "EthernalElves",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts\\EthernalElves.sol:42"
          },
          {
            "contract": "EthernalElves",
            "label": "ketchup",
            "type": "t_bytes32",
            "src": "contracts\\EthernalElves.sol:43"
          },
          {
            "contract": "EthernalElves",
            "label": "_remaining",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\EthernalElves.sol:45"
          },
          {
            "contract": "EthernalElves",
            "label": "sentinels",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EthernalElves.sol:46"
          },
          {
            "contract": "EthernalElves",
            "label": "bankBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EthernalElves.sol:47"
          },
          {
            "contract": "EthernalElves",
            "label": "auth",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EthernalElves.sol:48"
          },
          {
            "contract": "EthernalElves",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts\\EthernalElves.sol:49"
          }
        ],
        "types": {
          "t_contract(IElfMetaDataHandler)4827": {
            "label": "contract IElfMetaDataHandler"
          },
          "t_contract(ICampaigns)4853": {
            "label": "contract ICampaigns"
          },
          "t_contract(IERC20Lite)4817": {
            "label": "contract IERC20Lite"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          }
        }
      }
    },
    "49bdc76eae76e09f3e199384a22f37d048a01bb75bf87108cbebb733e0aac19b": {
      "address": "0xF9D1B048E1f417BFcAD8801A0B8A9a4f7dafc0d8",
      "txHash": "0xb0da79d4a693d6740fe78af9706fb2bcc951b9941b0c632113faa89647d05824",
      "layout": {
        "storage": [
          {
            "contract": "ElfCampaigns",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts\\ElfCampaigns.sol:17"
          },
          {
            "contract": "ElfCampaigns",
            "label": "elfcontract",
            "type": "t_address",
            "src": "contracts\\ElfCampaigns.sol:18"
          },
          {
            "contract": "ElfCampaigns",
            "label": "MAX_LEVEL",
            "type": "t_uint256",
            "src": "contracts\\ElfCampaigns.sol:20"
          },
          {
            "contract": "ElfCampaigns",
            "label": "TIME_CONSTANT",
            "type": "t_uint256",
            "src": "contracts\\ElfCampaigns.sol:21"
          },
          {
            "contract": "ElfCampaigns",
            "label": "REGEN_TIME",
            "type": "t_uint256",
            "src": "contracts\\ElfCampaigns.sol:22"
          },
          {
            "contract": "ElfCampaigns",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\ElfCampaigns.sol:23"
          },
          {
            "contract": "ElfCampaigns",
            "label": "camps",
            "type": "t_mapping(t_uint256,t_struct(Camps)2174_storage)",
            "src": "contracts\\ElfCampaigns.sol:25"
          },
          {
            "contract": "ElfCampaigns",
            "label": "ketchup",
            "type": "t_bytes32",
            "src": "contracts\\ElfCampaigns.sol:27"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Camps)2174_storage)": {
            "label": "mapping(uint256 => struct ElfCampaigns.Camps)"
          },
          "t_struct(Camps)2174_storage": {
            "label": "struct ElfCampaigns.Camps",
            "members": [
              {
                "label": "baseRewards",
                "type": "t_uint32"
              },
              {
                "label": "creatureCount",
                "type": "t_uint32"
              },
              {
                "label": "creatureHealth",
                "type": "t_uint32"
              },
              {
                "label": "expPoints",
                "type": "t_uint32"
              },
              {
                "label": "minLevel",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bytes32": {
            "label": "bytes32"
          }
        }
      }
    },
    "06fccd6fc1011de4b60f43284593fd5b6453517501cd17b0a5d5f3dbc0783a27": {
      "address": "0x6df94b08eADa7ca46F263A8ACCE93B795EedFC6A",
      "txHash": "0xdaa45c658aaf72513d52d5f49e1e50b592650222b06644fd5ef2b5fdd76f079f",
      "layout": {
        "storage": [
          {
            "contract": "ERC721",
            "label": "implementation_",
            "type": "t_address",
            "src": "contracts\\ERC721.sol:31"
          },
          {
            "contract": "ERC721",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\ERC721.sol:32"
          },
          {
            "contract": "ERC721",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\ERC721.sol:38"
          },
          {
            "contract": "ERC721",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\ERC721.sol:39"
          },
          {
            "contract": "ERC721",
            "label": "balanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\ERC721.sol:41"
          },
          {
            "contract": "ERC721",
            "label": "ownerOf",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\ERC721.sol:42"
          },
          {
            "contract": "ERC721",
            "label": "getApproved",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\ERC721.sol:43"
          },
          {
            "contract": "ERC721",
            "label": "isApprovedForAll",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\ERC721.sol:44"
          },
          {
            "contract": "EthernalElves",
            "label": "elfmetaDataHandler",
            "type": "t_contract(IElfMetaDataHandler)7250",
            "src": "contracts\\EthernalElves.sol:23"
          },
          {
            "contract": "EthernalElves",
            "label": "campaigns",
            "type": "t_contract(ICampaigns)7276",
            "src": "contracts\\EthernalElves.sol:24"
          },
          {
            "contract": "EthernalElves",
            "label": "ren",
            "type": "t_contract(IERC20Lite)7240",
            "src": "contracts\\EthernalElves.sol:25"
          },
          {
            "contract": "EthernalElves",
            "label": "isGameActive",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:31"
          },
          {
            "contract": "EthernalElves",
            "label": "isMintOpen",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:32"
          },
          {
            "contract": "EthernalElves",
            "label": "isWlOpen",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:33"
          },
          {
            "contract": "EthernalElves",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts\\EthernalElves.sol:34"
          },
          {
            "contract": "EthernalElves",
            "label": "dev1Address",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:36"
          },
          {
            "contract": "EthernalElves",
            "label": "dev2Address",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:37"
          },
          {
            "contract": "EthernalElves",
            "label": "terminus",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:38"
          },
          {
            "contract": "EthernalElves",
            "label": "validator",
            "type": "t_address",
            "src": "contracts\\EthernalElves.sol:39"
          },
          {
            "contract": "EthernalElves",
            "label": "INIT_SUPPLY",
            "type": "t_uint256",
            "src": "contracts\\EthernalElves.sol:41"
          },
          {
            "contract": "EthernalElves",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts\\EthernalElves.sol:42"
          },
          {
            "contract": "EthernalElves",
            "label": "ketchup",
            "type": "t_bytes32",
            "src": "contracts\\EthernalElves.sol:43"
          },
          {
            "contract": "EthernalElves",
            "label": "_remaining",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\EthernalElves.sol:45"
          },
          {
            "contract": "EthernalElves",
            "label": "sentinels",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EthernalElves.sol:46"
          },
          {
            "contract": "EthernalElves",
            "label": "bankBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EthernalElves.sol:47"
          },
          {
            "contract": "EthernalElves",
            "label": "auth",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EthernalElves.sol:48"
          },
          {
            "contract": "EthernalElves",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts\\EthernalElves.sol:49"
          }
        ],
        "types": {
          "t_contract(IElfMetaDataHandler)7250": {
            "label": "contract IElfMetaDataHandler"
          },
          "t_contract(ICampaigns)7276": {
            "label": "contract ICampaigns"
          },
          "t_contract(IERC20Lite)7240": {
            "label": "contract IERC20Lite"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          }
        }
      }
    }
  }
}
